// Função principal que calcula o nível com base nas vitórias e derrotas
function calcularNivelRankeado(vitorias, derrotas) {
    // Calcula o saldo de vitórias
    const saldoVitorias = vitorias - derrotas;
    
    // Determina o nível com base no número de vitórias
    let nivel;
    
    if (vitorias < 10) {
        nivel = "Ferro";
    } else if (vitorias >= 11 && vitorias <= 20) {
        nivel = "Bronze";
    } else if (vitorias >= 21 && vitorias <= 50) {
        nivel = "Prata";
    } else if (vitorias >= 51 && vitorias <= 80) {
        nivel = "Ouro";
    } else if (vitorias >= 81 && vitorias <= 90) {
        nivel = "Diamante";
    } else if (vitorias >= 91 && vitorias <= 100) {
        nivel = "Lendário";
    } else {
        nivel = "Imortal";
    }
    
    // Retorna a mensagem formatada
    return `O Herói tem um saldo de ${saldoVitorias} e está no nível de ${nivel}`;
}

// Função para testar vários cenários
function testarCalculadora() {
    // Array de casos de teste [vitórias, derrotas]
    const casosTeste = [
        [5, 3],      // Ferro
        [15, 10],    // Bronze
        [30, 15],    // Prata
        [60, 20],    // Ouro
        [85, 30],    // Diamante
        [95, 40],    // Lendário
        [120, 50]    // Imortal
    ];
    
    console.log("=== CALCULADORA DE PARTIDAS RANKEADAS ===\n");
    
    // Processa cada caso de teste
    casosTeste.forEach(([vitorias, derrotas], index) => {
        const resultado = calcularNivelRankeado(vitorias, derrotas);
        console.log(`Teste ${index + 1}: ${resultado}`);
    });
    
    console.log("\n=== FIM DOS TESTES ===");
}

// Executa os testes
testarCalculadora();

// Versão interativa (descomente para usar no browser)
/*
function calcularNivelInterativo() {
    const vitorias = parseInt(prompt("Digite o número de vitórias:"));
    const derrotas = parseInt(prompt("Digite o número de derrotas:"));
    
    if (isNaN(vitorias) || isNaN(derrotas)) {
        alert("Por favor, digite números válidos!");
        return;
    }
    
    const resultado = calcularNivelRankeado(vitorias, derrotas);
    alert(resultado);
}

// calcularNivelInterativo();
*/
